(()=>{"use strict";class e{constructor(e){this._station=e,this.stations=[{name:"Holborn",zone:"1"},{name:"Earl's Court",zone:"1,2"},{name:"Wimbledon",zone:"3"},{name:"Hammersmith",zone:"2"}]}set station(e){return this._station}get station(){return this.stations.find((e=>e.name===this._station))}}class t{constructor(e){this._transport=e,this.transports=[{type:"bus"},{type:"tube"}]}set transport(e){this._transport=e}get transport(){return this.transports.find((e=>e.type===this._transport))}}let r=new class{constructor(e=30){this.credit=e,this.maxFare=3.2,this._currentFare=0,this.zonesTravelled=[],this.busJourneyFare=1.8,this.enterBarrier="BARRIER_ENTRY",this.leaveBarrier="BARRIER_LEAVE",this.BUS=new t("bus").transport,this.TUBE=new t("tube").transport}get currentFare(){return this._currentFare}set currentFare(e){this._currentFare=e}barrierEntry(e,t){this.currentFare=this.credit-this.maxFare,t.type===this.BUS.type?this.currentFare=this.currentFare+this.maxFare-this.busJourneyFare:this.zonesTravelled.push(e.station)}barrierLeave(e,t){t.type!==this.BUS.type&&this.zonesTravelled.push(e.station)}calculateFare(){let e=[];for(let t of this.zonesTravelled)e.push(t.zone);const t=[...new Set(e)];switch(console.log(t),t){case t.includes("1")&&!t.includes("2"):console.log("Anywhere in Zone 1"),this.currentFare=this.credit-2.5;break;case t.includes("2")&&t.includes("1")&&!t.includes("3"):console.log("Any two zones including zone 1"),this.currentFare=this.credit-2;break;case t.includes("2")&&!t.includes("1")&&t.length>2:console.log("Any two zones excluding zone 1"),this.currentFare=this.credit-3;break;case t.includes("1")&&t.includes("2")&&t.includes("3"):console.log("Any three zones"),this.currentFare=this.credit-3.2;break;default:console.log("No zones detected so deduct the max"),this.currentFare=this.credit-this.maxFare}}};const s=new t("bus").transport,n=new t("tube").transport;r.barrierEntry(new e("Holborn"),n),r.barrierLeave(new e("Earl's Court"),n),r.barrierEntry(new e("Earl's Court"),s),r.barrierLeave(new e("Chelsea"),s),r.barrierEntry(new e("Earl's Court"),n),r.barrierLeave(new e("Hammersmith"),n),r.calculateFare();let a=r.currentFare;console.log(a)})();
//# sourceMappingURL=main.bundle.js.map